// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 회원 관련
sign-in(로그인)
 - request 
 {
  *email : String,
  *password : String
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success"
    accessToken : "jwt..."
    refreshToken : "jwt..."
    accessTokenExpirationTime : Number
    refreshTokenExpirationTime : Number
  }

  실패 
    1. 로그인 실패 => Http Status - 401 (Unauthorized)
    {
      code : "SF",
      message : "Sign In Failed."
    }

    2. 데이터베이스 에러 => Http Status - 500 (Internal Server Error)
    {
      code : "DE",
      message : "Database Error."
    }
======================================================================

sign-up(회원가입)
 - request 
 {
  *email : String,
  *password : String,
  *profileImage : String
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success"
  }

  실패 
    1. 이메일 중복 => Http Status - 400 (Bad Request)
    {
      code : "EE",
      message : "Existed Email."
    }

    2. 데이터베이스 에러 => Http Status - 500 (Internal Server Error)
    {
      code : "DE",
      message : "Database Error."
    }
======================================================================
userInfoData(회원정보 가져오기)
 - request 
 {
  *accessToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success"
    email: String;
    profileImage: String;
    admin: String;
  }

  실패 
    1. 토큰 누락 => Http Status - 400 (Missing Token)
    {
      code : "MT",
      message : "Refresh token is required."
    }

    2. accessToken 토큰 만료 => Http Status - 401 (Bad Request)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================

accessTokenReissue(accessToken 재발급)
 - request 
 {
  *refreshToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success"
    accessToken : "jwt..."
    accessTokenExpirationTime : Number
  }

  실패 
    1. 토큰 누락 => Http Status - 400 (Missing Token)
    {
      code : "MT",
      message : "Refresh token is required."
    }

    2. refreshToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "IR",
      message : "Invalid or expired refresh token."
    }

    3. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }
======================================================================

uploadImage(이미지 변경)
 - request 
 {
  *File : File,
  *accessToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
    url : String
  }

  실패 
    1. 파일 누락 => Http Status - 400 (Empty File)
    {
      code : "EF",
      message : "File is empty."
    }

    2. 파일 저장 경로 오류 => Http Status - 500 (Internal Server Error)
    {
      code : "FP",
      message : "Failed to save file."
    }

    3. 파일 이름 확장자 오류 => Http Status - 500 (File Extension Error)
    {
      code : "FE",
      message : "Invalid file name."
    }

    4. accessToken 토큰 만료 => Http Status - 401 (Bad Request)
    {
      code : "TE",
      message : "Token Expired."
    }

    5. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }
======================================================================









// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 음악 관련
addMusic(음악 추가)
 - request 
 {
  *vidUrl: Sring,
  *author: String,
  *thumb: String,
  *vidTitle: String,
  *infoDuration: Number,
  *playlistId: Long
 }


 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 중복된 음악 => Http Status - 400 (Bad Request)
    {
      code: "EM",
      message : "Existing Music."
    }

    3. 존재하지 않는 플레이리스트 ID => Http Status - 400 (Bad Request)
    {
      code: "PE",
      message : "Playlist Not Found."
    }

    4. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================

deleteMusic(음악 삭제)
 - request 
 {
  *musicId : Long,
  *accessToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 사용자 정보 조회 실패 => Http Status - 404 (Not Found)
    {
      code : "UE",
      message : "User not found."
    }

    3. 삭제 권한 없음 또는 음악이 존재하지 않음 => Http Status - 400 (Bad Request)
    {
      code : "NA",
      message : "No access or music not found."
    }

    4. 음악 삭제 실패 => Http Status - 500 (Internal Server Error)
    {
      code : "SE",
      message : "Failed to delete music."
    }

    5. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }
======================================================================

copyMusic(음악 복사)
**! 기능을 따로 만든거는 없고 addMusic(음악 추가)을 쓰는거 같음

======================================================================

updateOrderValue(음악 순서 변경)
 - request 
 {
  *playlistId : Long,
  *hoveredIndex : Number
  *musicId : Long
  *accessToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 존재하지 않는 재생목록 ID => Http Status - 404 (Not Found)
    {
      code : "PL",
      message : "해당 playlistId에 대한 데이터를 찾을 수 없습니다."
    }

    3. 존재하지 않는 음악 ID => Http Status - 400 (Bad Request)
    {
      code : "MU",
      message : "해당 musicId에 대한 음악을 찾을 수 없습니다."
    }

    4. 바꾸려는 값이 범위를 벗어난 경우 => Http Status - 400 (Bad Request)
    // 0보다 작거나 playlistMusic.size()보다 큰 경우
    {
      code : "ID",
      message : "유효하지 않은 hoveredIndex 값입니다."
    }

    5. 바꾸려는 값이 범위를 벗어난 경우 => Http Status - 500 (Internal Server Error)
    // 0보다 작거나 playlistMusic.size()보다 큰 경우
    {
      code : "OV",
      message : "잘못된 orderValue 값이 감지되었습니다."
    }

    5. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================








// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 재생목록 관련

createPlaylist(재생목록 생성)
 - request 
 {
  *playListName : String,
  *accessToken : "jwt..."
 }


 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 사용자 정보 조회 실패 => Http Status - 404 (Not Found)
    {
      code : "UE",
      message : "User not found."
    }

    3. 요청 데이터 유효성 문제(빈값 등) => Http Status - 400 (Bad Request)
    {
      code : "VR",
      message : "재생목록 이름은 비어 있을 수 없습니다."
    }

    4. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================

playlistLibrary(재생목록 모음 불러오기)
 - request 
 {
  *accessToken : "jwt..."
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
    playlistId: Bigint,
    userName: String,
    title: String,
    createDate: String
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 사용자 정보 조회 실패 => Http Status - 404 (Not Found)
    {
      code : "UE",
      message : "User not found."
    }

    3. 재생목록 조회 실패 => Http Status - 404 (Not Found)
    {
      code : "NR",
      message : "사용자의 재생목록이 없습니다."
    }

    4. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================

playlistDetail(재생목록 노래 불러오기)
 - request 
 {
  *accessToken : "jwt...",
  *playlistId : Long
 }


 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
    musicId: Bigint,
    title: String,
    author: String,
    duration: Number,
    url: String,
    imageUrl: String,
    createdAt: String
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 찾는 재생목록이 존재하지 않는 경우 => Http Status - 404 (Not Found)
    {
      code : "NR",
      message : "해당 재생목록을 찾을 수 없습니다."
    }

    3. 음악 목록 조회 중 오류 발생 => Http Status - 500 (Internal Server Error)
    // null 또는 비어 있는 리스트 반환, 관련 데이터가 올바르게 연결되지 않음
    {
      code : "ML",
      message : "Music List Error"
    }

    4. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }
======================================================================

deletePlaylist(재생목록 삭제)
 - request 
 {
  *accessToken : "jwt...",
  *musicId : Long
 }


 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 사용자 권한 오류 => Http Status - 403 (Forbidden)
    // 삭제 권한이 없거나 음악이 존재하지 않음
    {
      code : "MP",
      message : "Music Permission."
    }

    3. 사용자 정보 조회 실패 => Http Status - 404 (Not Found)
    {
      code : "UE",
      message : "User not found."
    }

    4. 음악을 Playlist에서 삭제할 때의 오류 => Http Status - 500 (Internal Server Error)
    {
      code : "PL",
      message : "Playlist Error."
    }

    5. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }
======================================================================

updatePlaylistName(재생목록 이름 변경)
 - request 
 {
  *accessToken : "jwt...",
  *modifyName : String,
  *modifyPlaylistId : Bigint
 }

 - response
  성공 => Http Status - 200 (OK)
  {
    code : "SU",
    message : "Success",
  }

  실패 
    1. accessToken 토큰 만료 => Http Status - 401 (Unauthorized)
    {
      code : "TE",
      message : "Token Expired."
    }

    2. 바꿀 대상의 재생목록의 ID가 존재하지 않을 경우 => Http Status - 404 (Not Found
)
    // modifyPlaylistId에 해당하는 Playlist가 데이터베이스에 존재하지 않는 경우
    {
      code : "PF",
      message : "Playlist not found."
    }

    3. 변경할 이름이 유효하지 않은 경우 => Http Status - 400 (Bad Request)
    // 빈 문자열, 특수문자 포함 등
    {
      code : "VN",
      message : "잘못된 Playlist 이름입니다."
    }

    4. 예상치 못한 서버 에러 => Http Status - 500 (Server Errorr)
    {
      code : "SE",
      message : "Internal server error. Please try again later."
    }

======================================================================


